gradlePlugin {
    plugins {
        sonatypeMavenPublish {
            id = 'io.github.pedro-bachiega.sonatype-maven-publish'
            implementationClass = 'com.pedrobneto.plugin.SonatypePublish'
            displayName = "Sonatype Maven Publish"
            description = "A simpler solution to publish your libraries on Sonatype maven"
        }
    }
}

publishing {
    repositories {
        maven {
            name = 'localPlugins'
            url = '../local-plugins-repository'
        }
    }
}

pluginBundle {
    website = 'https://github.com/Pedro-Bachiega/sonatype-maven-publishing-plugin'
    vcsUrl = 'https://github.com/Pedro-Bachiega/sonatype-maven-publishing-plugin'
    tags = ['sonatype', 'maven', 'publish', 'maven-publish']
}

allprojects {
    afterEvaluate {
        hideGenerationPublishingTasks()
        hidePublishingTasks()
        hideLocalRepositoryPublishingTasks()
    }
}

task publishLocal(group: 'publishing') {
    dependsOn publishAllPublicationsToLocalPluginsRepository
    dependsOn publishToMavenLocal
}

def hideTasks(String... taskList) {
    taskList.each {
        tasks.findByName(it).group = null
    }
}

def hideGenerationPublishingTasks() {
    hideTasks(
            "generateMetadataFileForPluginMavenPublication",
            "generateMetadataFileForSonatypeMavenPublishPluginMarkerMavenPublication",
            "generatePomFileForPluginMavenPublication",
            "generatePomFileForSonatypeMavenPublishPluginMarkerMavenPublication"
    )
}

def hidePublishingTasks() {
    hideTasks(
            "publish",
            "publishToMavenLocal",
            "publishPluginMavenPublicationToMavenLocal",
            "publishSonatypeMavenPublishPluginMarkerMavenPublicationToMavenLocal"
    )
}

def hideLocalRepositoryPublishingTasks() {
    hideTasks(
            "publishAllPublicationsToLocalPluginsRepository",
            "publishPluginMavenPublicationToLocalPluginsRepository",
            "publishSonatypeMavenPublishPluginMarkerMavenPublicationToLocalPluginsRepository"
    )
}
